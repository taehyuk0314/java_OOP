2018-12-17
https://ko.wikipedia.org/wiki/%EA%B0%9D%EC%B2%B4_(%EC%BB%B4%ED%93%A8%ED%84%B0_%EA%B3%BC%ED%95%99)

컴퓨터 과학에서 
객체 또는 오브젝트(object)는 
1.저장공간에서 할당되어 값을 가진다 &&
2..식별자에 의해 참조되는 공간

요소는 객체가 아닌 인덱스에 의한 것이다
변수, 자료 구조(배열), 함수(ex)  scanner.next) 또는 메소드가 객체가 될 수 있다


=> 변수를 이용해 (클래스)객체=>리얼월드 객체=(디스크에 있는 객체)에 접근
->클래스객체 0n 디스크 -> 클래스
-> 가상객체 on 메모리 ->인스턴스


메모리가 할당되기 전까지 (가상)객체는 존재하지 않는다

클래스 객체는 자료와 그 자료(데이터)를 다루는 명령의 조합을 포함하여 
객체가 메시지를 받고 자료를 처리하며 메시지를 다른 객체로 보낼 수 있도록 한다.

 실세계의 유추로 설명하자면, 
 만약 어떤 사람이 집에서 살기를 원할 때, 
 그 집의 청사진(집의 사진)이나 축소 모형 따위는 전혀 필요가 없다. 
필요한 것은 설계에 맞는 실제 집이다. 
이 유추에서 청사진은 클래스를 나타내고 실제 집은 객체를 나타낸다.

 class, and how to declare fields, methods, and constructors.


지역변수 four methode
멤버변수 one constructer

real-world object



객체지향프로그래밍 : 상속, 은닉화, 추상화, 다형성
OOP
객체지향 프로그래밍 은상추다

메소드의 선언구조
public String test(String a){
접근제한 + 리턴타입 + ID + (파라미터)+ {에어리어}
	a
} ->파라미터
ㅈ
m.test(a); -> 아규먼트

//리턴타입
결과가 ㅇ벗으면 void
결과가 있으면 String ,int....,Member

리턴이 있는경우와 없는경우
리턴타입이 void 인경우와 아닌 경우
판단기준 -> 개발자 문법x



